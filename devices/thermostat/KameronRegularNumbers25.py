# Code generated by font-to-py.py.
# font_to_py.py -s 45 -l 57 Kameron-Regular.ttf 25 KameronRegularNumbers25.py 
# Font: Kameron-Regular.ttf
# Font Source: https://github.com/google/fonts/blob/master/ofl/kameron/Kameron-Regular.ttf
# Only includes ASCII characters from '-Â´ to '9'

version = '0.2'

def height():
    return 25

def max_width():
    return 20

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 45

def max_ch():
    return 57

_font =\
b'\x11\x00\x7c\x00\x00\x00\x7e\x00\x00\x00\x0e\x00\x00\x00\x07\x00'\
b'\x00\x00\x03\x00\x70\x00\x03\xf0\x71\x00\x03\xf8\x71\x00\x03\x38'\
b'\x00\x00\x03\x1c\x00\x00\x07\x0e\x00\x00\x0e\x07\x00\x00\xfe\x07'\
b'\x00\x00\xfc\x03\x00\x00\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x0d\x00\x00\xc0\x00\x00\x00\xc0\x00\x00'\
b'\x00\xc0\x00\x00\x00\xc0\x00\x00\x00\xc0\x00\x00\x00\xc0\x00\x00'\
b'\x00\xc0\x00\x00\x00\xc0\x00\x00\x00\xc0\x00\x00\x00\xc0\x00\x00'\
b'\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x00\x00'\
b'\x70\x00\x00\x00\x70\x00\x00\x00\x70\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x01\x00\x00\xc0\x01'\
b'\x00\x00\xf8\x01\x00\x00\x3f\x00\x00\xe0\x07\x00\x00\xfc\x01\x00'\
b'\x80\x3f\x00\x00\xf0\x07\x00\x00\xfc\x00\x00\x00\x1f\x00\x00\x00'\
b'\x03\x00\x00\x00\x14\x00\xc0\xff\x01\x00\xf0\xff\x07\x00\xfc\xff'\
b'\x1f\x00\x3e\x00\x3e\x00\x0e\x00\x38\x00\x07\x00\x70\x00\x03\x00'\
b'\x60\x00\x03\x00\x60\x00\x03\x00\x60\x00\x03\x00\x60\x00\x07\x00'\
b'\x70\x00\x0e\x00\x38\x00\x7e\x00\x3f\x00\xfc\xff\x1f\x00\xf0\xff'\
b'\x07\x00\x80\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x14\x00\x0c\x00\x60\x00\x0e\x00\x60\x00'\
b'\x06\x00\x60\x00\x06\x00\x60\x00\xff\xff\x7f\x00\xff\xff\x7f\x00'\
b'\xff\xff\x7f\x00\x00\x00\x60\x00\x00\x00\x60\x00\x00\x00\x60\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x7c\x00\x78\x00\x7e\x00'\
b'\x7f\x00\x0e\x80\x67\x00\x07\xc0\x61\x00\x03\xe0\x60\x00\x03\x70'\
b'\x60\x00\x03\x30\x60\x00\x03\x38\x60\x00\x03\x1c\x60\x00\x07\x0e'\
b'\x60\x00\x0e\x0f\x60\x00\xfe\x07\x60\x00\xfc\x03\x7f\x00\xf8\x00'\
b'\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x07\x00'\
b'\x7c\x00\x1f\x00\x7e\x00\x1c\x00\x0e\x00\x30\x00\x07\x00\x70\x00'\
b'\x03\x00\x60\x00\x03\x0c\x60\x00\x03\x0c\x60\x00\x03\x0c\x60\x00'\
b'\x03\x0e\x60\x00\x07\x1e\x70\x00\x0e\x1b\x30\x00\xfe\x7b\x38\x00'\
b'\xfc\xf1\x1f\x00\xf8\xe0\x1f\x00\x00\xc0\x07\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\xf0'\
b'\x00\x00\x00\xf8\x00\x00\x00\xdc\x00\x00\x00\xc7\x00\x00\x80\xc3'\
b'\x00\x00\xe0\xc0\x00\x00\x70\xc0\x00\x00\x38\xc0\x60\x00\x0e\xc0'\
b'\x60\x00\x07\xc0\x60\x00\xff\xff\x7f\x00\xff\xff\x7f\x00\x00\xc0'\
b'\x60\x00\x00\xc0\x60\x00\x00\xc0\x60\x00\x00\xc0\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00'\
b'\x00\x00\x0e\x00\xff\x0f\x3e\x00\xff\x0f\x38\x00\x03\x06\x70\x00'\
b'\x03\x02\x60\x00\x03\x03\x60\x00\x03\x03\x60\x00\x03\x03\x60\x00'\
b'\x03\x03\x60\x00\x03\x07\x70\x00\x03\x07\x30\x00\x03\x1e\x3c\x00'\
b'\x0f\xfc\x1f\x00\x0f\xf8\x0f\x00\x00\xf0\x03\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x14\x00\x80\xff\x01\x00\xf0\xff\x0f\x00\xf8\xff\x1f\x00\x3c\x0c'\
b'\x3c\x00\x0e\x06\x30\x00\x07\x06\x70\x00\x03\x03\x60\x00\x03\x03'\
b'\x60\x00\x03\x03\x60\x00\x03\x03\x60\x00\x03\x07\x70\x00\x07\x07'\
b'\x30\x00\x0e\x1e\x3c\x00\x3e\xfc\x1f\x00\x3c\xf8\x0f\x00\x00\xf0'\
b'\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x14\x00\x3f\x00\x00\x00\x3f\x00\x00\x00\x03\x00\x00\x00'\
b'\x03\x00\x00\x00\x03\x00\x7c\x00\x03\x80\x7f\x00\x03\xf0\x7f\x00'\
b'\x03\xfc\x07\x00\x03\x7f\x00\x00\xc3\x0f\x00\x00\xe3\x03\x00\x00'\
b'\xfb\x00\x00\x00\x3f\x00\x00\x00\x1f\x00\x00\x00\x07\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x14\x00\x00\xc0\x07\x00\xf8\xe0\x1f\x00\xfc\xf1'\
b'\x1f\x00\xfe\x33\x38\x00\x0e\x1f\x30\x00\x07\x0e\x70\x00\x03\x0c'\
b'\x60\x00\x03\x0c\x60\x00\x03\x04\x60\x00\x03\x0c\x60\x00\x03\x0c'\
b'\x60\x00\x07\x0e\x70\x00\x0e\x1b\x30\x00\xfe\x33\x3c\x00\xfc\xf1'\
b'\x1f\x00\xf8\xe0\x1f\x00\x00\xc0\x07\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x14\x00\xe0\x07\x00\x00\xf8\x1f\x1e\x00'\
b'\xfc\x3f\x3e\x00\x1e\x3c\x38\x00\x06\x70\x70\x00\x07\x70\x60\x00'\
b'\x03\x60\x60\x00\x03\x60\x60\x00\x03\x60\x60\x00\x03\x60\x60\x00'\
b'\x07\x30\x30\x00\x0e\x38\x38\x00\x1e\x1c\x1e\x00\xfc\xff\x0f\x00'\
b'\xf0\xff\x07\x00\xc0\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00'

_index =\
b'\x00\x00\x46\x00\x7c\x00\xa6\x00\xd4\x00\x26\x01\x78\x01\xca\x01'\
b'\x1c\x02\x6e\x02\xc0\x02\x12\x03\x64\x03\xb6\x03\x08\x04'

_mvfont = memoryview(_font)

def _chr_addr(ordch):
    offset = 2 * (ordch - 45)
    return int.from_bytes(_index[offset:offset + 2], 'little')

def get_ch(ch):
    ordch = ord(ch)
    ordch = ordch + 1 if ordch >= 45 and ordch <= 57 else 45
    offset = _chr_addr(ordch)
    width = int.from_bytes(_font[offset:offset + 2], 'little')
    next_offs = _chr_addr(ordch +1)
    return _mvfont[offset + 2:next_offs], 25, width
 
